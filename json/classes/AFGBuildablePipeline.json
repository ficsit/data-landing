{
  "type": "object",
  "properties": {
    "mRadius": {
      "description": "Inner Radius of this pipe. Used for flow calculations. [cm]",
      "type": "number"
    },
    "mFlowLimit": {
      "description": "Maximum flow through this pipe in cubic meters. [m^3/s]",
      "type": "number"
    },
    "mFlowIndicatorClass": {
      "description": "Type of indicator to spawn on this pipe.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mFlowIndicatorMinimumPipeLength": {
      "description": "Smaller pipes than this will not get a flow indicator. [cm]",
      "type": "number"
    },
    "mSoundSplineComponent": {
      "$ref": "#/definitions/UFGSoundSplineComponent"
    },
    "mSplineAudioEvent": {
      "description": "The ak event to post for the sound spline"
    },
    "mPipeConnections": {
      "description": "Cached array of pipe connections.",
      "type": "array",
      "items": {}
    },
    "mFluidBox": {
      "$ref": "#/definitions/FFluidBox",
      "description": "Simulation data."
    },
    "mIndicatorData": {
      "$ref": "#/definitions/FQuantizedPipelineIndicatorData",
      "description": "Quantized data used by the indicators."
    },
    "mMaxIndicatorTurnAngle": {
      "description": "A floating point number.",
      "type": "number"
    },
    "mCachedFluidDescriptor": {
      "description": "Reference to a class.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mIgnoreActorsForIndicator": {
      "description": "Array of objects to ignore when performing the collision check in the indicator placement. This is needed during merge / split creation of new pipelines",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "package": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "package"
        ]
      }
    },
    "mFluidNames": {
      "description": "struct with both wwise safe names and their item names",
      "type": "array",
      "items": {
        "$ref": "#/definitions/FStringPair"
      }
    },
    "mCurrentFluid": {
      "description": "current fluid that is in the pipe",
      "type": "string"
    },
    "mQuantiziedContent": {
      "description": "how filled is the pipe",
      "type": "number"
    },
    "mQuantiziedFlow": {
      "description": "flow rate in the pipe",
      "type": "number"
    },
    "mRattleLimit": {
      "description": "at what flow should we play rattle",
      "type": "number"
    },
    "mIsRattling": {
      "description": "are we playing rattling sound?",
      "type": "boolean"
    },
    "mStartRattleSoundEvent": {
      "description": "Start rattle sound"
    },
    "mStopRattleSoundEvent": {
      "description": "Stop rattle sound"
    },
    "mMesh": {
      "description": "Mesh to use for his conveyor.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mMeshLength": {
      "description": "Length of the mesh to use for this conveyor.",
      "type": "number"
    },
    "mConnection0": {
      "description": "An unknown type (likely an Unreal Engine or plugin type)."
    },
    "mConnection1": {
      "description": "An unknown type (likely an Unreal Engine or plugin type)."
    },
    "mSplineData": {
      "description": "Compact representation of mSplineComponent, used for replication and save game",
      "type": "array",
      "items": {}
    },
    "mSplineComponent": {
      "description": "The spline component for this splined factory."
    },
    "mInstancedSplineComponent": {
      "description": "The spline meshes for this train track."
    },
    "mHologramClass": {
      "description": "The hologram class to use for constructing this object.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mDisplayName": {
      "description": "The human readable display name of this object.",
      "type": "string"
    },
    "mDescription": {
      "description": "The human readable description of this object.",
      "type": "string"
    },
    "MaxRenderDistance": {
      "description": "Max draw distance, inactive when < 0",
      "type": "number"
    },
    "mHighlightVector": {
      "$ref": "#/definitions/Vector",
      "description": "Vector used to determine highlight effects location"
    },
    "mFactoryTickFunction": {
      "$ref": "#/definitions/FFactoryTickFunction",
      "description": "Controls if we should receive Factory_Tick and how frequent."
    },
    "mMaterialNameToInstanceManager": {
      "$ref": "#/definitions/Map<string,UFGFactoryMaterialInstanceManager>",
      "description": "Map of colorable mesh materials to their respective colored factory material instance manager"
    },
    "mPrimaryColor": {
      "$ref": "#/definitions/LinearColor",
      "description": "The primary color of this buildable"
    },
    "mSecondaryColor": {
      "$ref": "#/definitions/LinearColor",
      "description": "The primary color of this buildable"
    },
    "mColorSlot": {
      "description": "The color slot of this buildable",
      "type": "number"
    },
    "mBuildEffectTemplate": {
      "description": "What build effect to use when building this building",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mDismantleEffectTemplate": {
      "description": "What build effect to use when dismantling this building",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mBuildEffectInstignator": {
      "$ref": "#/definitions/AActor",
      "description": "Used to sync and start build effect on buildings when created, but not after creation. Set's to true when creating a building, turns off in the construction effect finish play.\n[DavalliusA:Mon/01-04-2019] this is sett to null in default. If it's non null, we expect the build effects need to play."
    },
    "mDismantleEffectClassName": {
      "description": "Name read from config"
    },
    "mBuildEffectClassName": {
      "description": "Name read from config"
    },
    "mSkipBuildEffect": {
      "description": "Skip the build effect.",
      "type": "boolean"
    },
    "mBuildEffectSpeed": {
      "description": "Build effect speed, a constant speed (distance over time) that the build effect should have, so bigger buildings take longer",
      "type": "number"
    },
    "mForceNetUpdateOnRegisterPlayer": {
      "description": "Whether or not this building should use ForceNetUpdate() when a player registers/unregisters from it.",
      "type": "boolean"
    },
    "mHighlightParticleClassName": {
      "description": "Name read from config"
    },
    "mHighlightParticleSystemTemplate": {
      "description": "Particle system component"
    },
    "mHighlightParticleSystemComponent": {
      "description": "Particle system component"
    },
    "mDidFirstTimeUse": {
      "description": "If this building should show highlight before first use, save when it has been shown",
      "type": "boolean"
    },
    "mShouldShowHighlight": {
      "description": "Should we show highlight when building this building",
      "type": "boolean"
    },
    "mAllowCleranceSeparationEvenIfStackedOn": {
      "type": "boolean"
    },
    "mCameraDistanceSq": {
      "description": "Squared distance to closest camera",
      "type": "number"
    },
    "mBuildingID": {
      "description": "The building ID this belongs to.",
      "type": "number"
    },
    "mInteractWidgetClass": {
      "description": "The widget that will present our UI.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mInteractingPlayers": {
      "description": "Players interacting with this building",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AFGCharacterPlayer"
      }
    },
    "mIsUseable": {
      "description": "If you can interact with this buildable.",
      "type": "number"
    },
    "mNetConstructionID": {
      "$ref": "#/definitions/FNetConstructionID",
      "description": "ID given from server when constructed. Has not been assigned a value by server if 0."
    },
    "mBuiltWithRecipe": {
      "description": "Recipe this building was built with, e.g. used for refunds and stats.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mBuildTimeStamp": {
      "description": "Time when this building was built",
      "type": "number"
    },
    "mCachedShapeComponent": {
      "description": "Caching the shape component once we have gotten it"
    }
  },
  "required": [
    "MaxRenderDistance",
    "mAllowCleranceSeparationEvenIfStackedOn",
    "mBuildEffectClassName",
    "mBuildEffectInstignator",
    "mBuildEffectSpeed",
    "mBuildEffectTemplate",
    "mBuildTimeStamp",
    "mBuildingID",
    "mBuiltWithRecipe",
    "mCachedFluidDescriptor",
    "mCachedShapeComponent",
    "mCameraDistanceSq",
    "mColorSlot",
    "mConnection0",
    "mConnection1",
    "mCurrentFluid",
    "mDescription",
    "mDidFirstTimeUse",
    "mDismantleEffectClassName",
    "mDismantleEffectTemplate",
    "mDisplayName",
    "mFactoryTickFunction",
    "mFlowIndicatorClass",
    "mFlowIndicatorMinimumPipeLength",
    "mFlowLimit",
    "mFluidBox",
    "mFluidNames",
    "mForceNetUpdateOnRegisterPlayer",
    "mHighlightParticleClassName",
    "mHighlightParticleSystemComponent",
    "mHighlightParticleSystemTemplate",
    "mHighlightVector",
    "mHologramClass",
    "mIgnoreActorsForIndicator",
    "mIndicatorData",
    "mInstancedSplineComponent",
    "mInteractWidgetClass",
    "mInteractingPlayers",
    "mIsRattling",
    "mIsUseable",
    "mMaterialNameToInstanceManager",
    "mMaxIndicatorTurnAngle",
    "mMesh",
    "mMeshLength",
    "mNetConstructionID",
    "mPipeConnections",
    "mPrimaryColor",
    "mQuantiziedContent",
    "mQuantiziedFlow",
    "mRadius",
    "mRattleLimit",
    "mSecondaryColor",
    "mShouldShowHighlight",
    "mSkipBuildEffect",
    "mSoundSplineComponent",
    "mSplineAudioEvent",
    "mSplineComponent",
    "mSplineData",
    "mStartRattleSoundEvent",
    "mStopRattleSoundEvent"
  ]
}