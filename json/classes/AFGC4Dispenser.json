{
  "type": "object",
  "properties": {
    "mC4ExplosiveClass": {
      "$ref": "#/definitions/classReference<AFGC4Explosive>",
      "description": "What types of bombs we should spawn"
    },
    "mDispensedExplosives": {
      "description": "Keeps track of the explosives we have dispensed",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AFGC4Explosive"
      }
    },
    "mMaxChargeTime": {
      "description": "If we charge the throw for this amount of time we will get max throw velocity",
      "type": "number"
    },
    "mMaxThrowForce": {
      "description": "If we charge the throw to the max we will throw with this force",
      "type": "number"
    },
    "mDelayBetweenExplosions": {
      "description": "When we blow shit up we want a small delay in between each explosion",
      "type": "number"
    },
    "mAssosiatedHud": {
      "$ref": "#/definitions/AFGHUD",
      "description": "[DavalliusA:Wed/20-03-2019] the base hud object will never get invalid during use, so we can use anormal pointer here to access it."
    },
    "mMagSize": {
      "description": "How much ammo does a magazine cover",
      "type": "number"
    },
    "mCurrentAmmo": {
      "description": "How much ammo is loaded into the weapon",
      "type": "number"
    },
    "mAmmunitionClass": {
      "$ref": "#/definitions/classReference<UFGItemDescriptor>",
      "description": "The item we shoot"
    },
    "mDamageTypeClass": {
      "$ref": "#/definitions/classReference<UFGDamageType>",
      "description": "Damage type to use when hitting others"
    },
    "mReloadTime": {
      "description": "In seconds, how long time does it take to reload the weapon",
      "type": "number"
    },
    "mFireRate": {
      "description": "How many seconds between between shots",
      "type": "number"
    },
    "mIsFiring": {
      "description": "Are we firing?",
      "type": "boolean"
    },
    "mIsPendingFire": {
      "description": "The player wants to shoot",
      "type": "boolean"
    },
    "mIsReloading": {
      "description": "True if we are currently reloading",
      "type": "boolean"
    },
    "mReloadSound": {
      "$ref": "#/definitions/UAkAudioEvent",
      "description": "Sound played when reloading"
    },
    "mAttachmentClass": {
      "$ref": "#/definitions/classReference<AFGEquipmentAttachment>",
      "description": "This is the attachment for this class"
    },
    "mSecondaryAttachmentClass": {
      "$ref": "#/definitions/classReference<AFGEquipmentAttachment>",
      "description": "This is the secondary attachment for this class"
    },
    "mEquipmentSlot": {
      "$ref": "#/definitions/EEquipmentSlot",
      "description": "To what slot is this limited to?"
    },
    "mSprintHeadBobShake": {
      "$ref": "#/definitions/classReference<any>",
      "description": "Camera shake to play when sprinting"
    },
    "mEquipSound": {
      "$ref": "#/definitions/UAkAudioEvent",
      "description": "Sound played when equipping"
    },
    "mUnequipSound": {
      "$ref": "#/definitions/UAkAudioEvent",
      "description": "Sound played when unequipping"
    },
    "mEquipmentWidget": {
      "$ref": "#/definitions/classReference<any>",
      "description": "Class of widget to add when equipping this equipment"
    },
    "mChildEquipment": {
      "$ref": "#/definitions/AFGEquipmentChild",
      "description": "Holds a reference to the child equipment that may be spawned with this"
    },
    "m1PAnimClass": {
      "$ref": "#/definitions/classReference<any>",
      "description": "The AnimBlueprint class to use for the 1p anim for our pawn, specifying none here means that the pawn default 1p anim will be used"
    },
    "mAttachSocket": {
      "description": "If this equipment should attach to a socket, this is the socket.",
      "type": "string"
    },
    "mChildEquipmentClass": {
      "$ref": "#/definitions/classReference<AFGEquipmentChild>",
      "description": "The class (if any) to use to spawn a child equipment"
    },
    "mCostToUse": {
      "description": "The cost of using this equipment",
      "type": "array",
      "items": {
        "$ref": "#/definitions/FItemAmount"
      }
    },
    "mArmAnimation": {
      "$ref": "#/definitions/EArmEquipment",
      "description": "Arms animation this should play on the when the equipment is equipped (only used if mEquipmentSlot == ES_ARMS)"
    },
    "mBackAnimation": {
      "$ref": "#/definitions/EBackEquipment",
      "description": "Arms animation this should play on the when the equipment is equipped (only used if mEquipmentSlot == ES_BACK)"
    },
    "mHasPersistentOwner": {
      "description": "If the owner is persistent throughout the lifetime of this equipment",
      "type": "boolean"
    },
    "mAttachment": {
      "$ref": "#/definitions/AFGEquipmentAttachment",
      "description": "This is the attachment of this equipment"
    },
    "mSecondaryAttachment": {
      "$ref": "#/definitions/AFGEquipmentAttachment",
      "description": "This is a potential secondary attachment"
    },
    "mIdlePoseAnimation": {
      "description": "Idle animation to play when equipped. Can be null if we don't want to play any special animation"
    },
    "mIdlePoseAnimation3p": {
      "description": "Idle animation to play when equipped in 3p. Can be null if we don't want to play any special animation"
    },
    "mUseDefaultPrimaryFire": {
      "description": "Should we use the default primary fire implementation",
      "type": "boolean"
    }
  },
  "required": [
    "m1PAnimClass",
    "mAmmunitionClass",
    "mArmAnimation",
    "mAssosiatedHud",
    "mAttachSocket",
    "mAttachment",
    "mAttachmentClass",
    "mBackAnimation",
    "mC4ExplosiveClass",
    "mChildEquipment",
    "mChildEquipmentClass",
    "mCostToUse",
    "mCurrentAmmo",
    "mDamageTypeClass",
    "mDelayBetweenExplosions",
    "mDispensedExplosives",
    "mEquipSound",
    "mEquipmentSlot",
    "mEquipmentWidget",
    "mFireRate",
    "mHasPersistentOwner",
    "mIdlePoseAnimation",
    "mIdlePoseAnimation3p",
    "mIsFiring",
    "mIsPendingFire",
    "mIsReloading",
    "mMagSize",
    "mMaxChargeTime",
    "mMaxThrowForce",
    "mReloadSound",
    "mReloadTime",
    "mSecondaryAttachment",
    "mSecondaryAttachmentClass",
    "mSprintHeadBobShake",
    "mUnequipSound",
    "mUseDefaultPrimaryFire"
  ]
}