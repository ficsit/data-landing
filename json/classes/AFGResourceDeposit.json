{
  "type": "object",
  "properties": {
    "mResourceDepositPackage": {
      "$ref": "#/definitions/FResourceDepositPackage",
      "description": "Valid if mLootTableIndex is not INDEX_NONE"
    },
    "mResourceDepositTableIndex": {
      "description": "Index in the resource deposit table",
      "type": "number"
    },
    "mIsEmptied": {
      "description": "is deposit emptied",
      "type": "boolean"
    },
    "mMineAmount": {
      "description": "How much to mine per cycle",
      "type": "number"
    },
    "mDepositMeshComponent": {
      "description": "The mesh we use for displaying the resource deposit"
    },
    "mOverrideResourceClass": {
      "description": "Reference to a class.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mResourceClass": {
      "description": "Type of resource",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mPurity": {
      "$ref": "#/definitions/EResourcePurity",
      "description": "How pure the resource is"
    },
    "mAmount": {
      "$ref": "#/definitions/EResourceAmount",
      "description": "How pure the resource is"
    },
    "mDecalComponent": {
      "description": "the decal that used for displaying the resource"
    },
    "mBoxComponent": {
      "description": "If we have no static mesh but a decal, then we use this for collision"
    },
    "mResourcesLeft": {
      "description": "How much resources is left in this node",
      "type": "number"
    },
    "mIsOccupied": {
      "description": "If true, then we are occupied by something // [Dylan 3/2/2020] - Removed savegame meta",
      "type": "boolean"
    },
    "mRevealedOnMapBy": {
      "description": "Radar tower modifies this to show this resource node in the map",
      "type": "array",
      "items": {
        "$ref": "#/definitions/UObject"
      }
    },
    "mIsLonerNode": {
      "description": "If true, this node will NEVER join another cluster of nodes, regardless of proximity.",
      "type": "boolean"
    },
    "mCanPlaceResourceExtractor": {
      "description": "Can this resource node be used for placing resource extractors on",
      "type": "boolean"
    },
    "mExtractMultiplier": {
      "description": "Multiplier that is applied in the end of extraction calculations. Is used for making deposits extract more than regular nodes",
      "type": "number"
    },
    "mPurityTextArray": {
      "description": "Text mapped to resource purity",
      "type": "array",
      "items": {
        "$ref": "#/definitions/FPurityTextPair"
      }
    },
    "mHighlightParticleSystemTemplate": {
      "description": "Particle system component"
    },
    "mHighlightParticleSystemComponent": {
      "description": "Particle system component"
    },
    "mDoSpawnParticle": {
      "description": "Bool for is we should spawn particle - @todo Do we really need to save this? //[Dylan 3/2/2020]",
      "type": "boolean"
    }
  },
  "required": [
    "mAmount",
    "mBoxComponent",
    "mCanPlaceResourceExtractor",
    "mDecalComponent",
    "mDepositMeshComponent",
    "mDoSpawnParticle",
    "mExtractMultiplier",
    "mHighlightParticleSystemComponent",
    "mHighlightParticleSystemTemplate",
    "mIsEmptied",
    "mIsLonerNode",
    "mIsOccupied",
    "mMineAmount",
    "mOverrideResourceClass",
    "mPurity",
    "mPurityTextArray",
    "mResourceClass",
    "mResourceDepositPackage",
    "mResourceDepositTableIndex",
    "mResourcesLeft",
    "mRevealedOnMapBy"
  ]
}