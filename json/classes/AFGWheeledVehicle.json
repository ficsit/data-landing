{
  "type": "object",
  "properties": {
    "mWorkBench": {
      "$ref": "#/definitions/UFGWorkBench",
      "description": "Workbench component"
    },
    "mUpdateMovementHandle": {
      "description": "An unknown type (likely an Unreal Engine or plugin type)."
    },
    "mForceSimulationMode": {
      "description": "Forces vehicle to be in simulation mode",
      "type": "boolean"
    },
    "mForceRealMode": {
      "description": "Forces vehicle to be in real mode",
      "type": "boolean"
    },
    "TranferStatusChangedDelegate": {
      "description": "Broadcast when transfer status is updated"
    },
    "mReplicatedState": {
      "$ref": "#/definitions/FReplicatedAddedVelocitiesState",
      "description": "replicated state of vehicle"
    },
    "mFuelConsumption": {
      "description": "This vehicles fuel consumption in MW/s",
      "type": "number"
    },
    "mCurrentFuelAmount": {
      "description": "Amount left of the currently burned piece of fuel. In megawatt seconds (MWs).",
      "type": "number"
    },
    "mIsLoadingVehicle": {
      "description": "Are we currently in the process of loading inventory",
      "type": "boolean"
    },
    "mIsUnloadingVehicle": {
      "description": "Are we currently in the process of unloading inventory",
      "type": "boolean"
    },
    "mCurrentFuelClass": {
      "description": "Type of the currently burned piece of fuel.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mIsInAir": {
      "description": "Is vehicle in air",
      "type": "boolean"
    },
    "mNumWheelsOnGround": {
      "description": "Is there at least 1 wheel on the ground",
      "type": "number"
    },
    "mVehicleMovement": {
      "description": "vehicle simulation component"
    },
    "mDistBetweenDecals": {
      "description": "Distance between tire track decals",
      "type": "number"
    },
    "mDecalLifespan": {
      "description": "Time, in seconds, for the tire track decal to live",
      "type": "number"
    },
    "mDefaultTireTrackDecal": {
      "description": "default tire track decal. Can be empty for no default."
    },
    "mTireTrackDecals": {
      "description": "tire track decal  settings",
      "type": "array",
      "items": {
        "$ref": "#/definitions/FTireTrackDecalDetails"
      }
    },
    "mDecalSize": {
      "$ref": "#/definitions/Vector",
      "description": "The scale for the decal. This will probably need to be uniquely set for every vehicle."
    },
    "mFoliageDestroyRadius": {
      "description": "When foliage is run over by this vehicle, this is the radius of foliage that should be cleared",
      "type": "number"
    },
    "mAddedGroundAngularVelocityStrengthYaw": {
      "description": "Strength of the angular velocity yaw modifier when on the ground and holding \"drift\"",
      "type": "number"
    },
    "mAddedGroundAngularVelocityStrengthPitch": {
      "description": "Strength of the angular velocity pitch modifier when on the ground and holding \"drift\"",
      "type": "number"
    },
    "mAddedAirControlAngularVelocityStrengthYaw": {
      "description": "Strength of the added air control angular yaw velocity",
      "type": "number"
    },
    "mAddedAirControlAngularVelocityStrengthPitch": {
      "description": "Strength of the added air control angular pitch velocity",
      "type": "number"
    },
    "mNaturalAngularVelocityStrengthYaw": {
      "description": "A floating point number.",
      "type": "number"
    },
    "mNaturalAngularVelocityStrengthPitch": {
      "description": "A floating point number.",
      "type": "number"
    },
    "mNaturalAirAngularVelocityStrengthYaw": {
      "description": "A floating point number.",
      "type": "number"
    },
    "mNaturalAirAngularVelocityStrengthPitch": {
      "description": "A floating point number.",
      "type": "number"
    },
    "mAddedAngularVelocityInputSmoothingSpeed": {
      "description": "A floating point number.",
      "type": "number"
    },
    "mFoliageCollideBox": {
      "description": "Collision box for detecting overlaps with foliage only. Shape modified in BP"
    },
    "mIsSimulated": {
      "description": "Is the movement being simulated?",
      "type": "boolean"
    },
    "mSimulationDistance": {
      "description": "Distance from player at which simulation begins",
      "type": "number"
    },
    "mSimulationMovementComponent": {
      "description": "Our component used for simulated movement"
    },
    "mFuelInventory": {
      "$ref": "#/definitions/UFGInventoryComponent",
      "description": "Inventory for fuel"
    },
    "mStorageInventory": {
      "$ref": "#/definitions/UFGInventoryComponent",
      "description": "Inventory for storage"
    },
    "mInventorySize": {
      "description": "An 32-bit signed integer.",
      "type": "number"
    },
    "mTireParticleCollection": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/FTireParticleCollection"
      }
    },
    "mVehicleParticeMap": {
      "description": "Map that lists which templates corresponds to what surface type",
      "type": "array",
      "items": {
        "$ref": "#/definitions/FSurfaceParticlePair"
      }
    },
    "mActiveParticleAndTemplate": {
      "description": "Contains references to all current active partice systems on the tires",
      "type": "array",
      "items": {
        "$ref": "#/definitions/FParticleTemplatePair"
      }
    },
    "mTireEffectSocketName": {
      "description": "Base name of socket use for tire particles",
      "type": "string"
    },
    "mTargetNodeLinkedList": {
      "$ref": "#/definitions/UFGTargetPointLinkedList",
      "description": "Linked list with target nodes that make up our path to travel"
    },
    "mIsPathVisible": {
      "description": "Should targets nodes be visible",
      "type": "boolean"
    },
    "mLastDecalLocations": {
      "description": "location of the last placed decals for each wheel",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Vector"
      }
    },
    "mOverlappedHISMComponents": {
      "description": "If we have overlapped foliage go nuts and destroy them",
      "type": "array",
      "items": {}
    },
    "mAddedAngularVelocityInputPitch": {
      "description": "A floating point number.",
      "type": "number"
    },
    "mAddedAngularVelocityInputYaw": {
      "description": "A floating point number.",
      "type": "number"
    },
    "mReverseAddedAngularVelocityYawMultiplier": {
      "description": "A floating point number.",
      "type": "number"
    },
    "mHasAirControl": {
      "description": "if true, can control vehicle in air",
      "type": "boolean"
    },
    "mGroundTraceLength": {
      "description": "length to trace to check for ground",
      "type": "number"
    },
    "mMaxDeltaLinearVelocity": {
      "description": "max change in linear velocity since last frame",
      "type": "number"
    },
    "mMaxDeltaAngularVelocity": {
      "description": "max change in angular velocity since last frame",
      "type": "number"
    },
    "mRollStabilisationStrength": {
      "description": "Amount of damping to add to roll",
      "type": "number"
    },
    "mMaxRollAngleForUpsideDown": {
      "description": "The min roll angle to consider the vehicle upside down - only as far as roll goes. Other factors are also taken into account.",
      "type": "number"
    },
    "mMaxFlatOnGroundRollAngleLimit": {
      "description": "The max roll angle to consider the vehicle flat on ground - only as far as roll goes. Other factors are also taken into account.",
      "type": "number"
    },
    "mMaxRollForActivationOfAssistedVelocities": {
      "description": "If roll angle is over this value then assisted velocities will not be applied.",
      "type": "number"
    },
    "mMaxSpeedForAddedAcceleration": {
      "description": "An 32-bit signed integer.",
      "type": "number"
    },
    "mMaxAssistedAcceleration": {
      "description": "Maximum amount of force that can be added to assist acceleration",
      "type": "number"
    },
    "mHasAssistedVelocities": {
      "description": "If true, Assisted Acceleration & drifting is be in effect",
      "type": "boolean"
    },
    "mHasRollStabilisation": {
      "description": "If true, roll stabilisation is be in effect",
      "type": "boolean"
    },
    "mDriftingLateralForce": {
      "description": "the lateral force we add for drifting",
      "type": "number"
    },
    "mDriftingUpwardForce": {
      "description": "the upward force we add for drifting (this is to reduce friction & encourage oversteer)",
      "type": "number"
    },
    "mDriftForwardForceStrengthCurve": {
      "description": "An unknown type (likely an Unreal Engine or plugin type)."
    },
    "mDriftForceBones": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "mMinAngleForDrift": {
      "description": "A floating point number.",
      "type": "number"
    },
    "mCachedSurfaceMaterial": {
      "description": "Cached surface material under the first tire"
    },
    "mNeedsFuelToDrive": {
      "description": "Do we need fuel to drive",
      "type": "boolean"
    },
    "mDisplayName": {
      "description": "The human readable name for this vehicle.",
      "type": "string"
    },
    "mDescription": {
      "description": "The human readable description for this vehicle.",
      "type": "string"
    },
    "mHologramClass": {
      "description": "Hologram to build this class with.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mMesh": {
      "description": "The main skeletal mesh associated with this Vehicle"
    },
    "mHealthComponent": {
      "$ref": "#/definitions/UFGHealthComponent",
      "description": "Keeps track of our current health"
    },
    "mDisabledByWaterLocations": {
      "description": "If any of these locations enters water, then we are unusable",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Vector"
      }
    },
    "mNetConstructionID": {
      "$ref": "#/definitions/FNetConstructionID",
      "description": "ID given from server when constructed. Has not been assigned a value by server if 0."
    },
    "mBuiltWithRecipe": {
      "description": "Recipe this vehicle was built with, e.g. used for refunds and stats.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mPrimaryColor": {
      "$ref": "#/definitions/LinearColor",
      "description": "The primary color of this buildable"
    },
    "mSecondaryColor": {
      "$ref": "#/definitions/LinearColor",
      "description": "The primary color of this buildable"
    },
    "mIsSelfDriving": {
      "description": "If this vehicle is self driving.",
      "type": "boolean"
    },
    "mSelfDrivingController": {
      "description": "The AI that controls this vehicle when self-driving is activated."
    },
    "mStoredPhysicsData": {
      "description": "Saved like this, as we can't store it in serialize, as it will be killed",
      "type": "array",
      "items": {
        "$ref": "#/definitions/FVehiclePhysicsData"
      }
    },
    "mConstructSound": {
      "description": "Sound played when this vehicle is created"
    },
    "mIsDestructible": {
      "description": "Can this vehicle be destroyed by damage?",
      "type": "number"
    },
    "mIsSubmergedInWater": {
      "description": "If true, then we are submerged in water",
      "type": "number"
    },
    "mSubmergedAngularDamping": {
      "description": "increased angular damping when vehicle is under water",
      "type": "number"
    },
    "mSubmergedLinearDamping": {
      "description": "increased linear damping when vehicle is under water",
      "type": "number"
    },
    "mSubmergedBouyantForce": {
      "description": "upwards force applied to vehicles when underwater",
      "type": "number"
    },
    "mGasDamageType": {
      "description": "Gas damage typ that should be redirected to the driver",
      "type": "object",
      "properties": {
        "package": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "package"
      ]
    },
    "mSignificanceBias": {
      "description": "A bias to the significance value",
      "type": "number"
    },
    "mAddToSignificanceManager": {
      "description": "Indicates if the vehicle should be handled by significance manager",
      "type": "number"
    },
    "mSignificanceRange": {
      "description": "Range that this vehicle should be significant within",
      "type": "number"
    },
    "mShouldAttachDriver": {
      "description": "True if the driver should be attached, false if this is a \"remote controlled\" pawn.",
      "type": "boolean"
    },
    "mIsDriverVisible": {
      "description": "True if the driver should be visible, set from FVehicleSeat",
      "type": "boolean"
    },
    "mDriverSeatSocket": {
      "description": "Socket to attach the driver to, if mShouldAttachDriver is true, set from FVehicleSeat",
      "type": "string"
    },
    "mDriverSeatAnimation": {
      "description": "Animation to play on the character player when in the driver seat, set from FVehicleSeat"
    },
    "mDriverExitOffset": {
      "$ref": "#/definitions/Vector",
      "description": "Where to place the driver upon exiting (local space), set from FVehicleSeat"
    },
    "mDriver": {
      "$ref": "#/definitions/AFGCharacterPlayer",
      "description": "The driver, not saved, pawns remember their last driven vehicle and enters it in begin play."
    },
    "mIsDriving": {
      "description": "Is this vehicle being driven.",
      "type": "boolean"
    }
  },
  "required": [
    "TranferStatusChangedDelegate",
    "mActiveParticleAndTemplate",
    "mAddToSignificanceManager",
    "mAddedAirControlAngularVelocityStrengthPitch",
    "mAddedAirControlAngularVelocityStrengthYaw",
    "mAddedAngularVelocityInputPitch",
    "mAddedAngularVelocityInputSmoothingSpeed",
    "mAddedAngularVelocityInputYaw",
    "mAddedGroundAngularVelocityStrengthPitch",
    "mAddedGroundAngularVelocityStrengthYaw",
    "mBuiltWithRecipe",
    "mCachedSurfaceMaterial",
    "mConstructSound",
    "mCurrentFuelAmount",
    "mCurrentFuelClass",
    "mDecalLifespan",
    "mDecalSize",
    "mDefaultTireTrackDecal",
    "mDescription",
    "mDisabledByWaterLocations",
    "mDisplayName",
    "mDistBetweenDecals",
    "mDriftForceBones",
    "mDriftForwardForceStrengthCurve",
    "mDriftingLateralForce",
    "mDriftingUpwardForce",
    "mDriver",
    "mDriverExitOffset",
    "mDriverSeatAnimation",
    "mDriverSeatSocket",
    "mFoliageCollideBox",
    "mFoliageDestroyRadius",
    "mForceRealMode",
    "mForceSimulationMode",
    "mFuelConsumption",
    "mFuelInventory",
    "mGasDamageType",
    "mGroundTraceLength",
    "mHasAirControl",
    "mHasAssistedVelocities",
    "mHasRollStabilisation",
    "mHealthComponent",
    "mHologramClass",
    "mInventorySize",
    "mIsDestructible",
    "mIsDriverVisible",
    "mIsDriving",
    "mIsInAir",
    "mIsLoadingVehicle",
    "mIsPathVisible",
    "mIsSelfDriving",
    "mIsSimulated",
    "mIsSubmergedInWater",
    "mIsUnloadingVehicle",
    "mLastDecalLocations",
    "mMaxAssistedAcceleration",
    "mMaxDeltaAngularVelocity",
    "mMaxDeltaLinearVelocity",
    "mMaxFlatOnGroundRollAngleLimit",
    "mMaxRollAngleForUpsideDown",
    "mMaxRollForActivationOfAssistedVelocities",
    "mMaxSpeedForAddedAcceleration",
    "mMesh",
    "mMinAngleForDrift",
    "mNaturalAirAngularVelocityStrengthPitch",
    "mNaturalAirAngularVelocityStrengthYaw",
    "mNaturalAngularVelocityStrengthPitch",
    "mNaturalAngularVelocityStrengthYaw",
    "mNeedsFuelToDrive",
    "mNetConstructionID",
    "mNumWheelsOnGround",
    "mOverlappedHISMComponents",
    "mPrimaryColor",
    "mReplicatedState",
    "mReverseAddedAngularVelocityYawMultiplier",
    "mRollStabilisationStrength",
    "mSecondaryColor",
    "mSelfDrivingController",
    "mShouldAttachDriver",
    "mSignificanceBias",
    "mSignificanceRange",
    "mSimulationDistance",
    "mSimulationMovementComponent",
    "mStorageInventory",
    "mStoredPhysicsData",
    "mSubmergedAngularDamping",
    "mSubmergedBouyantForce",
    "mSubmergedLinearDamping",
    "mTargetNodeLinkedList",
    "mTireEffectSocketName",
    "mTireParticleCollection",
    "mTireTrackDecals",
    "mUpdateMovementHandle",
    "mVehicleMovement",
    "mVehicleParticeMap",
    "mWorkBench"
  ]
}