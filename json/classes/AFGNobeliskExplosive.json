{
  "type": "object",
  "properties": {
    "mRotatingMovementComp": {
      "description": "An unknown type (likely an Unreal Engine or plugin type)."
    },
    "mDetonateIn": {
      "description": "Tells client to mark this to explode after a certain time",
      "type": "number"
    },
    "mEnvironmentDestructionSphere": {
      "description": "An unknown type (likely an Unreal Engine or plugin type)."
    },
    "mThrowRotation": {
      "$ref": "#/definitions/Rotator"
    },
    "mDestructionCollisionComp": {
      "description": "Collision Component used to determine which objects should be considered for destruction"
    },
    "mDestroysRelevantActors": {
      "description": "Should actors implementing destructable interfaces be considered for destruction",
      "type": "boolean"
    },
    "mDestroysFoliage": {
      "description": "Should foliage be considered for destruction",
      "type": "boolean"
    },
    "mMaxParticleSpawnsPerDetonation": {
      "description": "Any amount of particle systems over this limit will not be spawned",
      "type": "number"
    },
    "mProjectileData": {
      "$ref": "#/definitions/FProjectileData",
      "description": "projectile data"
    },
    "mHasExploded": {
      "description": "did it explode?",
      "type": "boolean"
    },
    "mInitialVelocity": {
      "$ref": "#/definitions/Vector",
      "description": "Used to get the velocity over to clients"
    },
    "mCollisionComp": {
      "description": "Sphere collision component"
    },
    "mProjectileMovement": {
      "description": "Projectile movement component"
    },
    "mTargetLocation": {
      "$ref": "#/definitions/Vector",
      "description": "Location we are aiming at ( if any )"
    },
    "mCanTriggerExplodeBySameClass": {
      "description": "Indicates if we should explode if we are taking damage from same actor class as ourselves",
      "type": "boolean"
    },
    "mExplodeAtEndOfLife": {
      "description": "Should the projectile explode when it dies of lifespan?",
      "type": "boolean"
    },
    "mCachedPC": {
      "$ref": "#/definitions/AFGPlayerController",
      "description": "Caching the PC so that we can do damage even without a valid weapon"
    }
  },
  "required": [
    "mCachedPC",
    "mCanTriggerExplodeBySameClass",
    "mCollisionComp",
    "mDestroysFoliage",
    "mDestroysRelevantActors",
    "mDestructionCollisionComp",
    "mDetonateIn",
    "mEnvironmentDestructionSphere",
    "mExplodeAtEndOfLife",
    "mHasExploded",
    "mInitialVelocity",
    "mMaxParticleSpawnsPerDetonation",
    "mProjectileData",
    "mProjectileMovement",
    "mRotatingMovementComp",
    "mTargetLocation",
    "mThrowRotation"
  ]
}